services:
  nginx:
    build:
      context: ./requirements/nginx
      args:
        DOMAIN_NAME: ${USER}.42.fr
    env_file:
      - .env
    container_name: ${USER}_nginx
    ports:
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception_network
    restart: unless-stopped
    depends_on:
      wordpress:
        condition: service_healthy

  wordpress:
    build:
      context: ./requirements/wordpress
    env_file:
      - .env
    container_name: ${USER}_wordpress
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception_network
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wp", "core", "is-installed", "--allow-root"]
      interval: 10s
      timeout: 5s
      retries: 10

  mariadb:
    build:
      context: ./requirements/mariadb
    env_file:
      - .env
    container_name: ${USER}_mariadb
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - inception_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Bonus: Adminer for database management
  adminer:
    build:
      context: ./requirements/bonus/adminer
    env_file:
      - .env
    container_name: ${USER}_adminer
    ports:
      - "8080:8080"
    networks:
      - inception_network
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy

  # Bonus: Static website for project documentation
  website:
    build:
      context: ./requirements/bonus/website
    container_name: ${USER}_website
    ports:
      - "8888:8888"
    networks:
      - inception_network
    restart: unless-stopped

networks:
  inception_network:
    driver: bridge
    name: ${USER}_inception_network

volumes:
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/wordpress
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/mariadb